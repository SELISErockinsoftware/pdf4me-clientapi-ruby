=begin
#DmsApi

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0

=end

require "uri"

module Pdf4me
  class ManagementApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # ApiUsage
    # Give an overview of current ApiUsage and if its payment.
    # @param [Hash] opts the optional parameters
    # @return [ApiUsageRes]
    def api_usage(opts = {})
      data, _status_code, _headers = api_usage_with_http_info(opts)
      return data
    end

    # ApiUsage
    # Give an overview of current ApiUsage and if its payment.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ApiUsageRes, Fixnum, Hash)>] ApiUsageRes data, response status code and response headers
    def api_usage_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ManagementApi.api_usage ..."
      end
      # resource path
      local_var_path = "/Management/ApiUsage"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/plain', 'application/json', 'text/json', 'application/bson'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ApiUsageRes')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ManagementApi#api_usage\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Version
    # A simple method to get the current Version
    # @param [Hash] opts the optional parameters
    # @return [VersionRes]
    def version(opts = {})
      data, _status_code, _headers = version_with_http_info(opts)
      return data
    end

    # Version
    # A simple method to get the current Version
    # @param [Hash] opts the optional parameters
    # @return [Array<(VersionRes, Fixnum, Hash)>] VersionRes data, response status code and response headers
    def version_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ManagementApi.version ..."
      end
      # resource path
      local_var_path = "/Management/Version"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/plain', 'application/json', 'text/json', 'application/bson'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VersionRes')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ManagementApi#version\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
