=begin
#DmsApi

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Pdf4me::JobApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'JobApi' do
  before do
    # run before each test
    @instance = Pdf4me::JobApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of JobApi' do
    it 'should create an instance of JobApi' do
      expect(@instance).to be_instance_of(Pdf4me::JobApi)
    end
  end

  # unit tests for create_archive_job_config
  # CreateArchiveJobConfig
  # Create Archive Job which continuesly converts your PDF to Pdf-A.
  # @param [Hash] opts the optional parameters
  # @option opts [ArchiveJobReq] :req 
  # @return [ArchiveJobReq]
  describe 'create_archive_job_config test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for job_configs
  # JobConfigs
  # Give a list of user defined Job Configurations.
  # @param [Hash] opts the optional parameters
  # @return [Array<JobConfig>]
  describe 'job_configs test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for run_job
  # RunJob
  # Run a JobConfig with given Document Data. Documents can be given directly in the Job or as a Documen Reference.
  # @param [Hash] opts the optional parameters
  # @option opts [Job] :req 
  # @return [RunJobRes]
  describe 'run_job test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for save_job_config
  # SaveJobConfig
  # Create a Job Configuration for recurring executions or pipelining of pdf4me functionality.  With pipelining it is possible to run pdf4me base functionality in a specific order as a single execution.
  # @param [Hash] opts the optional parameters
  # @option opts [JobConfig] :req 
  # @return [JobConfigRes]
  describe 'save_job_config test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
